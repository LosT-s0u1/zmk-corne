/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    behaviors {
        double_bksp: double_bksp {
            compatible = "zmk,behavior-tap-dance";
            label = "DOUBLE_BKSP";
            #binding-cells = <0>;
            bindings = <&kp BACKSPACE>, <&kp LC(BACKSPACE)>;

            tapping-term-ms = <250>;
        };

        hrl: home_row_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_ROW_LEFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <265>;
            flavor = "balanced";
        };

        hrr: home_row_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_ROW_RIGHT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <265>;
            hold-trigger-key-positions = <38 37 36 29 28 26 25 24 17 16 15 14 13 12 0 1 2 3 4 5 28 29 37 38 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
            flavor = "balanced";
        };
    };

    macros {
        w_amp: w_amp {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_0 &kp KP_NUMBER_3 &kp KP_NUMBER_8>,
                <&macro_release>,
                <&kp LEFT_ALT>;

            label = "W_AMP";
        };

        w_sharp: w_sharp {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_0 &kp KP_NUMBER_3 &kp KP_NUMBER_5>,
                <&macro_release>,
                <&kp LEFT_ALT>;

            label = "W_SHARP";
        };

        w_pipe: w_pipe {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_1 &kp KP_NUMBER_2 &kp KP_NUMBER_4>,
                <&macro_release>,
                <&kp LEFT_ALT>;

            label = "W_PIPE";
        };

        w_sobaka: w_sobaka {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_0 &kp KP_NUMBER_6 &kp KP_NUMBER_4>,
                <&macro_release>,
                <&kp LEFT_ALT>;

            label = "W_SOBAKA";
        };

        w_dollar: w_dollar {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_0 &kp KP_NUMBER_3 &kp KP_NUMBER_6>,
                <&macro_release>,
                <&kp LEFT_ALT>;

            label = "W_DOLLAR";
        };

        w_dot: w_dot {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_0 &kp KP_NUMBER_4 &kp KP_NUMBER_6>,
                <&macro_release>,
                <&kp LEFT_ALT>;

            label = "W_DOT";
        };
    };

    combos {
        compatible = "zmk,combos";

        amp {
            bindings = <&w_amp>;
            key-positions = <7 8>;
            layers = <0>;
        };

        sharp {
            bindings = <&w_sharp>;
            key-positions = <2 3>;
            layers = <0>;
        };

        pipe {
            bindings = <&w_pipe>;
            key-positions = <22 34>;
            layers = <0>;
        };

        ctrl_shift_esc {
            bindings = <&kp LC(LS(ESCAPE))>;
            key-positions = <12 24>;
            layers = <0>;
        };

        ctrl_alt_del {
            bindings = <&kp LA(LC(DEL))>;
            key-positions = <24 35>;
        };

        win_d {
            bindings = <&kp LG(D)>;
            key-positions = <13 25>;
            layers = <0>;
        };

        win_r {
            bindings = <&kp LG(R)>;
            key-positions = <4 16>;
            layers = <0>;
        };

        b_combo {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <31 19>;
            layers = <0>;
        };

        ee_combo {
            bindings = <&kp GRAVE>;
            key-positions = <5 4>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  ESC |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // |  TAB |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // |LY2\. |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |   /  |
            //                    |RU/EN| LY4 | SPC |   | ENT | LY1/[|RU/EN|

            bindings = <
&kp ESC           &kp Q  &kp W            &kp E            &kp R              &kp T           &kp Y         &kp U               &kp I             &kp O             &kp P          &double_bksp
&mt LEFT_WIN TAB  &kp A  &hrl LEFT_WIN S  &hrl LEFT_ALT D  &hrl LEFT_SHIFT F  &hrl LCTRL G    &hrr RCTRL H  &hrr RIGHT_SHIFT J  &hrr RIGHT_ALT K  &hrr RIGHT_WIN L  &kp SEMI       &mt SQT RIGHT_ALT
&lt 2 LS(FSLH)    &kp Z  &kp X            &kp C            &kp V              &kp B           &kp N         &kp M               &kp COMMA         &kp DOT           &kp KP_DIVIDE  &mt RIGHT_SHIFT SLASH
                                          &kp LCTRL        &mo 4              &lt 3 SPACE     &kp RETURN    &lt 1 LEFT_BRACKET  &kp LS(LALT)
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |  DEL |
            // | CTRL | "|" | _@  |  _# | _$  | _&  |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB  &kp EXCL  &kp AT_SIGN  &kp HASH  &kp DLLR   &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK       &kp LPAR         &kp RPAR  &kp DEL
&none    &w_pipe   &w_sobaka    &w_sharp  &w_dollar  &w_amp       &kp MINUS  &kp EQUAL  &kp LBKT        &kp RBKT         &kp BSLH  &kp GRAVE
&none    &none     &none        &none     &none      &none        &kp UNDER  &kp PLUS   &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp PIPE  &kp TILDE
                                &kp LGUI  &trans     &kp SPACE    &kp RET    &trans     &trans
            >;
        };

        Digits_layer {
            bindings = <
&trans  &trans     &trans     &trans     &kp LC(Z)  &kp LC(C)    &kp N7  &kp N8        &kp N9  &kp KP_MINUS  &kp ASTERISK  &kp DEL
&trans  &kp LC(A)  &kp LC(S)  &trans     &kp LC(F)  &kp LC(V)    &kp N4  &kp N5        &kp N6  &kp KP_PLUS   &kp KP_SLASH  &trans
&trans  &trans     &trans     &kp LC(G)  &kp LC(H)  &kp LC(X)    &kp N1  &kp N2        &kp N3  &kp KP_DOT    &trans        &trans
                              &trans     &trans     &trans       &trans  &kp NUMBER_0  &trans
            >;
        };

        f_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &kp F7  &kp F8  &kp F9  &kp F10  &kp PAUSE_BREAK  &kp DELETE
&trans  &trans  &trans  &trans  &trans  &trans    &kp F4  &kp F5  &kp F6  &kp F11  &trans           &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp F1  &kp F2  &kp F3  &kp F12  &trans           &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        Nav_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &kp LC(C)    &kp HOME            &kp UP_ARROW  &kp END              &kp PG_UP      &kp PRINTSCREEN  &kp DELETE
&trans      &trans        &trans        &trans        &trans        &trans       &kp LEFT            &kp DOWN      &kp RIGHT            &kp PAGE_DOWN  &kp SCROLLLOCK   &kp KP_NUMLOCK
&kp LSHFT   &trans        &trans        &trans        &trans        &mkp LCLK    &kp LC(LEFT_ARROW)  &trans        &kp LC(RIGHT_ARROW)  &trans         &kp PAUSE_BREAK  &trans
                                        &kp LGUI      &trans        &kp SPACE    &kp LC(V)           &kp LC(C)     &kp LC(X)
            >;
        };
    };
};
